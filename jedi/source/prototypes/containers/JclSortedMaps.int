(*$JPPDEFINEMACRO JCLSORTEDMAPINT(ENTRYTYPENAME, ENTRYARRAYTYPENAME,
  SELFCLASSNAME, ANCESTORNAME, STDMAPINTERFACENAME, SORTEDMAPINTERFACENAME, KEYSETINTERFACENAME, VALUECOLLECTIONINTERFACENAME,
  INTERFACEADDITIONAL, PRIVATEADDITIONAL, PROTECTEDADDITIONAL, PUBLICADDITIONAL, KEYOWNERSHIPDECLARATION, VALUEOWNERSHIPDECLARATION,
  KEYCONSTKEYWORD, KEYTYPENAME, VALUECONSTKEYWORD, VALUETYPENAME)
  ENTRYTYPENAME = record
    Key: KEYTYPENAME;
    Value: VALUETYPENAME;
  end;

  ENTRYARRAYTYPENAME = array of ENTRYTYPENAME;

  SELFCLASSNAME = class(ANCESTORNAME, {$IFDEF THREADSAFE} IJclLockable, {$ENDIF THREADSAFE}
    IJclIntfCloneable, IJclCloneable, IJclGrowable, IJclPackable, IJclContainer,INTERFACEADDITIONAL
    STDMAPINTERFACENAME, SORTEDMAPINTERFACENAME)
  private
    FEntries: ENTRYARRAYTYPENAME;PRIVATEADDITIONAL
    function BinarySearch(KEYCONSTKEYWORDKey: KEYTYPENAME): Integer;
  protected
    procedure AssignDataTo(Dest: TJclAbstractContainerBase); override;
    procedure MoveArray(FromIndex, ToIndex, Count: Integer);
    { IJclPackable }
    procedure SetCapacity(Value: Integer); override;
    { STDMAPINTERFACENAME }
    procedure Clear;
    function ContainsKey(KEYCONSTKEYWORDKey: KEYTYPENAME): Boolean;
    function ContainsValue(VALUECONSTKEYWORDValue: VALUETYPENAME): Boolean;
    function Equals(const AMap: STDMAPINTERFACENAME): Boolean;
    function GetValue(KEYCONSTKEYWORDKey: KEYTYPENAME): VALUETYPENAME;
    function IsEmpty: Boolean;
    function KeyOfValue(VALUECONSTKEYWORDValue: VALUETYPENAME): KEYTYPENAME;
    function KeySet: KEYSETINTERFACENAME;
    procedure PutAll(const AMap: STDMAPINTERFACENAME);
    procedure PutValue(KEYCONSTKEYWORDKey: KEYTYPENAME; VALUECONSTKEYWORDValue: VALUETYPENAME);
    function Remove(KEYCONSTKEYWORDKey: KEYTYPENAME): VALUETYPENAME;
    function Size: Integer;
    function Values: VALUECOLLECTIONINTERFACENAME;
    { SORTEDMAPINTERFACENAME }
    function FirstKey: KEYTYPENAME;
    function HeadMap(KEYCONSTKEYWORDToKey: KEYTYPENAME): SORTEDMAPINTERFACENAME;
    function LastKey: KEYTYPENAME;
    function SubMap(KEYCONSTKEYWORDFromKey, ToKey: KEYTYPENAME): SORTEDMAPINTERFACENAME;
    function TailMap(KEYCONSTKEYWORDFromKey: KEYTYPENAME): SORTEDMAPINTERFACENAME;
    { IJclCloneable }
    function IJclCloneable.Clone = ObjectClone;
    { IJclIntfCloneable }
    function IJclIntfCloneable.Clone = IntfClone;PROTECTEDADDITIONAL
  public
    constructor Create(ACapacity: IntegerVALUEOWNERSHIPDECLARATIONKEYOWNERSHIPDECLARATION);
    destructor Destroy; override;PUBLICADDITIONAL
  end;*)
